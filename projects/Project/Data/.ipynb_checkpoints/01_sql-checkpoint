{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f9b4d485-2c23-4141-af7a-a268f83b3802",
   "metadata": {},
   "source": [
    "<H1><B>01 Data Collection</B></H1>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d5752bf-4d92-490a-b898-eede59202cdc",
   "metadata": {
    "tags": []
   },
   "source": [
    "<H3><B>Step 1</B>&nbsp;&nbsp;&nbsp;Connect to website, find data</H3>\n",
    "Inormation given by professor Jeroen: Op een fictieve site van het Medisch Centrum Randstad vinden jullie de data van gegenereerde\n",
    "gegevens betreffende levensstijl en levensverwachting. Aan jullie de taak om deze data te scrapen.<br>&nbsp; <i>This paragraph still needs attention and explanation how we obtained data in which way.</i>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b070df6f-bb8a-4cc0-bbb5-31d3ad7e3cc4",
   "metadata": {
    "tags": []
   },
   "source": [
    "<H3><B>Step 2</B>&nbsp;&nbsp;&nbsp;Save DATA to suitable location.</H3><i>With advice from Jeroen we understood temporary data is stored locally on your drive after analyzing DataFrame online.</i><br>Find temporary DATA in '\\Project\\rest_server\\medisch_centrum_randstad\\db.sqlite3' (depending on your USER location).<br>&nbsp;"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06ee93b8-146e-4efd-9de7-c9790c18f32f",
   "metadata": {},
   "source": [
    "<H3><B>Step 3</B>&nbsp;&nbsp;&nbsp;Import data into SQLite and EXPORT DATA as CSV</H3>\n",
    "Import <B>scraped data (file 'db.sqlite3')</B> into DB Browser for SQLite. <br>Find data from 'Tables/rest_api_netlify' and EXPORT DATA as CSV.<br>&nbsp;"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "b060dba0-aa3b-4fa6-993b-c0464350650e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from PIL import Image\n",
    "import csv\n",
    "import json\n",
    "import os\n",
    "\n",
    "import pandas as pd\n",
    "import sqlite3\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import scipy as cp\n",
    "\n",
    "#import os\n",
    "import sys\n",
    "\n",
    "from os import system as sys\n",
    "sys('pip install pysqlite3 --upgrade pip')\n",
    "\n",
    "from matplotlib import pyplot as plt\n",
    "from matplotlib_venn import venn2, venn3\n",
    "from PIL import Image\n",
    "import pandas as pd\n",
    "import sqlite3\n",
    "\n",
    "#def main():\n",
    "#osPath = str(sys.argv[1])\n",
    "#print(os.path.abspath(osPath))\n",
    "\n",
    "#if __name__ == \"__main__\":\n",
    "    #main()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "04064d02-f7b5-43e0-b72a-b73dcc0fd8bc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b133c160-0c1e-46c1-b13c-16b5f9b67f11",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'mysql'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[23], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mmysql\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mconnector\u001b[39;00m\n\u001b[0;32m      3\u001b[0m mydb \u001b[38;5;241m=\u001b[39m mysql\u001b[38;5;241m.\u001b[39mconnector\u001b[38;5;241m.\u001b[39mconnect(\n\u001b[0;32m      4\u001b[0m   host\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlocalhost\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m      5\u001b[0m   user\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124myourusername\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m      6\u001b[0m   password\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124myourpassword\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m      7\u001b[0m   database\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mmydatabase\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m      8\u001b[0m )\n\u001b[0;32m     10\u001b[0m mycursor \u001b[38;5;241m=\u001b[39m mydb\u001b[38;5;241m.\u001b[39mcursor()\n",
      "\u001b[1;31mModuleNotFoundError\u001b[0m: No module named 'mysql'"
     ]
    }
   ],
   "source": [
    "import mysql.connector\n",
    "\n",
    "mydb = mysql.connector.connect(\n",
    "  host=\"localhost\",\n",
    "  user=\"yourusername\",\n",
    "  password=\"yourpassword\",\n",
    "  database=\"mydatabase\"\n",
    ")\n",
    "\n",
    "mycursor = mydb.cursor()\n",
    "\n",
    "mycursor.execute(\"CREATE TABLE customers (name VARCHAR(255), address VARCHAR(255))\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c9e9fef3-8a17-46c0-b282-a0922518d6e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector\n",
    "\n",
    "mydb = mysql.connector.connect(\n",
    "  host=\"localhost\",\n",
    "  user=\"yourusername\",\n",
    "  password=\"yourpassword\",\n",
    "  database=\"mydatabase\"\n",
    ")\n",
    "\n",
    "mycursor = mydb.cursor()\n",
    "\n",
    "mycursor.execute(\"CREATE TABLE customers (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), address VARCHAR(255))\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "586e46aa-7349-4d60-adf0-e51a4392635f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector\n",
    "\n",
    "mydb = mysql.connector.connect(\n",
    "  host=\"localhost\",\n",
    "  user=\"yourusername\",\n",
    "  password=\"yourpassword\",\n",
    "  database=\"mydatabase\"\n",
    ")\n",
    "\n",
    "mycursor = mydb.cursor()\n",
    "\n",
    "mycursor.execute(\"SHOW TABLES\")\n",
    "\n",
    "for x in mycursor:\n",
    "  print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8b112690-3ec4-473d-a305-fafd2dd89745",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sys('sqlite3 db/lifespan.db \"VACUUM;\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "378e3e4b-0e47-48b4-b99b-163138a83b65",
   "metadata": {},
   "source": [
    "&nbsp;<br><H3><B>Step 3</B>   Think about process to automate the above.</H3><i>This paragraph still needs attention and explanation.</i>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "8bbd6010-6acf-41f8-8632-fb32599ab718",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "dbConnection = sqlite3.connect('db.sqlite3.db')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "82e5329f-8393-4d32-97f9-06f9622c2c97",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'db' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[20], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdb\u001b[49m\u001b[38;5;241m.\u001b[39msqlite3\u001b[38;5;241m.\u001b[39mto_sql(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124msqlite3\u001b[39m\u001b[38;5;124m'\u001b[39m, dbConnection, if_exists\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mreplace\u001b[39m\u001b[38;5;124m'\u001b[39m, index \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m)\n",
      "\u001b[1;31mNameError\u001b[0m: name 'db' is not defined"
     ]
    }
   ],
   "source": [
    "db.sqlite3.to_sql('sqlite3', dbConnection, if_exists='replace', index = False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8acae933-8c49-4064-ab61-0e6f0f0c19dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_json('data.json')\n",
    "\n",
    "print(df.to_string()) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "027c5ac1-c3c8-489a-8d6a-8358883a8d6b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "dbCursor = dbConnection.cursor()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ffad0c3-1181-4887-a659-2123c92fda0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(data, index = [\"day1\", \"day2\", \"day3\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "fdee8008-d29d-4652-b0ff-58de081d8548",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'query' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[22], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m result \u001b[38;5;241m=\u001b[39m dbCursor\u001b[38;5;241m.\u001b[39mexecute(\u001b[43mquery\u001b[49m)\u001b[38;5;241m.\u001b[39mfetchall()\n\u001b[0;32m      2\u001b[0m \u001b[38;5;28mprint\u001b[39m(result)\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;28mtype\u001b[39m(result))\n",
      "\u001b[1;31mNameError\u001b[0m: name 'query' is not defined"
     ]
    }
   ],
   "source": [
    "result = dbCursor.execute(query).fetchall()\n",
    "print(result)\n",
    "print(type(result))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d719eb0-0885-4fc3-9930-666aa93dfcc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "dbConnection.close()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
